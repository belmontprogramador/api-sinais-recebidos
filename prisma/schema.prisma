// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Banco de dados de sinais Bitcoin

model BitcoinSignalOneMinute {
  id        Int      @id @default(autoincrement())
  ticker    String
  orderType String
  price     Float
  interval  Int      // 1 minuto
  createdAt DateTime @default(now())
}

model BitcoinSignalFiveMinute {
  id        Int      @id @default(autoincrement())
  ticker    String
  orderType String
  price     Float
  interval  Int      // 5 minutos
  createdAt DateTime @default(now())
}

model BitcoinSignalFifteenMinute {
  id        Int      @id @default(autoincrement())
  ticker    String
  orderType String
  price     Float
  interval  Int      // 15 minutos
  createdAt DateTime @default(now())
}

model BitcoinSignalFortyFiveMinute {
  id        Int      @id @default(autoincrement())
  ticker    String
  orderType String
  price     Float
  interval  Int      // 45 minutos
  createdAt DateTime @default(now())
}

model BitcoinSignalOneHour {
  id        Int      @id @default(autoincrement())
  ticker    String
  orderType String
  price     Float
  interval  Int      // 60 minutos (1 hora)
  createdAt DateTime @default(now())
}

model BitcoinSignalFourHours {
  id        Int      @id @default(autoincrement())
  ticker    String
  orderType String
  price     Float
  interval  Int      // 240 minutos (4 horas)
  createdAt DateTime @default(now())
}

model BitcoinSignalOneDay {
  id        Int      @id @default(autoincrement())
  ticker    String
  orderType String
  price     Float
  interval  Int      // 1440 minutos (1 dia)
  createdAt DateTime @default(now())
}

model BitcoinSignalOneWeek {
  id        Int      @id @default(autoincrement())
  ticker    String
  orderType String
  price     Float
  interval  Int      // 10080 minutos (1 semana)
  createdAt DateTime @default(now())
}

model BitcoinSignalOneMonth {
  id        Int      @id @default(autoincrement())
  ticker    String
  orderType String
  price     Float
  interval  Int      // 43200 minutos (1 mês)
  createdAt DateTime @default(now())
}

model BitcoinSignalThreeMonth {
  id        Int      @id @default(autoincrement())
  ticker    String
  orderType String
  price     Float
  interval  Int      // 129600 minutos (3 meses)
  createdAt DateTime @default(now())
}

model BitcoinSignalSixMonth {
  id        Int      @id @default(autoincrement())
  ticker    String
  orderType String
  price     Float
  interval  Int      // 259200 minutos (6 meses)
  createdAt DateTime @default(now())
}

model BitcoinSignalOneYear {
  id        Int      @id @default(autoincrement())
  ticker    String
  orderType String
  price     Float
  interval  Int      // 518400 minutos (1 ano)
  createdAt DateTime @default(now())
}

// Banco de dados de resultados das operações Bitcoin

model BitcoinOperationResultOneMinute {
  id                Int      @id @default(autoincrement())
  ticker            String
  interval          Int      // 1 minuto
  previousOrderType String
  previousPrice     Float
  currentOrderType  String
  currentPrice      Float
  result            String   // 'win' ou 'loss'
  priceDifference   Float    // Diferença de preço
  createdAt         DateTime @default(now())
}

model BitcoinOperationResultFiveMinute {
  id                Int      @id @default(autoincrement())
  ticker            String
  interval          Int      // 5 minutos
  previousOrderType String
  previousPrice     Float
  currentOrderType  String
  currentPrice      Float
  result            String
  priceDifference   Float
  createdAt         DateTime @default(now())
}

model BitcoinOperationResultFifteenMinute {
  id                Int      @id @default(autoincrement())
  ticker            String
  interval          Int      // 15 minutos
  previousOrderType String
  previousPrice     Float
  currentOrderType  String
  currentPrice      Float
  result            String
  priceDifference   Float
  createdAt         DateTime @default(now())
}

model BitcoinOperationResultFortyFiveMinute {
  id                Int      @id @default(autoincrement())
  ticker            String
  interval          Int      // 45 minutos
  previousOrderType String
  previousPrice     Float
  currentOrderType  String
  currentPrice      Float
  result            String
  priceDifference   Float
  createdAt         DateTime @default(now())
}

model BitcoinOperationResultOneHour {
  id                Int      @id @default(autoincrement())
  ticker            String
  interval          Int      // 60 minutos (1 hora)
  previousOrderType String
  previousPrice     Float
  currentOrderType  String
  currentPrice      Float
  result            String
  priceDifference   Float
  createdAt         DateTime @default(now())
}

model BitcoinOperationResultFourHours {
  id                Int      @id @default(autoincrement())
  ticker            String
  interval          Int      // 240 minutos (4 horas)
  previousOrderType String
  previousPrice     Float
  currentOrderType  String
  currentPrice      Float
  result            String
  priceDifference   Float
  createdAt         DateTime @default(now())
}

model BitcoinOperationResultOneDay {
  id                Int      @id @default(autoincrement())
  ticker            String
  interval          Int      // 1440 minutos (1 dia)
  previousOrderType String
  previousPrice     Float
  currentOrderType  String
  currentPrice      Float
  result            String
  priceDifference   Float
  createdAt         DateTime @default(now())
}

model BitcoinOperationResultOneWeek {
  id                Int      @id @default(autoincrement())
  ticker            String
  interval          Int      // 10080 minutos (1 semana)
  previousOrderType String
  previousPrice     Float
  currentOrderType  String
  currentPrice      Float
  result            String
  priceDifference   Float
  createdAt         DateTime @default(now())
}

model BitcoinOperationResultOneMonth {
  id                Int      @id @default(autoincrement())
  ticker            String
  interval          Int      // 43200 minutos (1 mês)
  previousOrderType String
  previousPrice     Float
  currentOrderType  String
  currentPrice      Float
  result            String
  priceDifference   Float
  createdAt         DateTime @default(now())
}

model BitcoinOperationResultThreeMonth {
  id                Int      @id @default(autoincrement())
  ticker            String
  interval          Int      // 129600 minutos (3 meses)
  previousOrderType String
  previousPrice     Float
  currentOrderType  String
  currentPrice      Float
  result            String
  priceDifference   Float
  createdAt         DateTime @default(now())
}

model BitcoinOperationResultSixMonth {
  id                Int      @id @default(autoincrement())
  ticker            String
  interval          Int      // 259200 minutos (6 meses)
  previousOrderType String
  previousPrice     Float
  currentOrderType  String
  currentPrice      Float
  result            String
  priceDifference   Float
  createdAt         DateTime @default(now())
}

model BitcoinOperationResultOneYear {
  id                Int      @id @default(autoincrement())
  ticker            String
  interval          Int      // 518400 minutos (1 ano)
  previousOrderType String
  previousPrice     Float
  currentOrderType  String
  currentPrice      Float
  result            String
  priceDifference   Float
  createdAt         DateTime @default(now())
}

// Banco de dados para sinais da Cardano

model CardanoSignalOneMinute {
  id        Int      @id @default(autoincrement())
  ticker    String
  orderType String
  price     Float
  interval  Int
  createdAt DateTime @default(now())
}

model CardanoSignalFiveMinute {
  id        Int      @id @default(autoincrement())
  ticker    String
  orderType String
  price     Float
  interval  Int
  createdAt DateTime @default(now())
}

model CardanoSignalFifteenMinute {
  id        Int      @id @default(autoincrement())
  ticker    String
  orderType String
  price     Float
  interval  Int
  createdAt DateTime @default(now())
}

model CardanoSignalFortyFiveMinute {
  id        Int      @id @default(autoincrement())
  ticker    String
  orderType String
  price     Float
  interval  Int
  createdAt DateTime @default(now())
}

model CardanoSignalOneHour {
  id        Int      @id @default(autoincrement())
  ticker    String
  orderType String
  price     Float
  interval  Int
  createdAt DateTime @default(now())
}

model CardanoSignalFourHours {
  id        Int      @id @default(autoincrement())
  ticker    String
  orderType String
  price     Float
  interval  Int
  createdAt DateTime @default(now())
}

model CardanoSignalOneDay {
  id        Int      @id @default(autoincrement())
  ticker    String
  orderType String
  price     Float
  interval  Int
  createdAt DateTime @default(now())
}

model CardanoSignalOneWeek {
  id        Int      @id @default(autoincrement())
  ticker    String
  orderType String
  price     Float
  interval  Int
  createdAt DateTime @default(now())
}

model CardanoSignalOneMonth {
  id        Int      @id @default(autoincrement())
  ticker    String
  orderType String
  price     Float
  interval  Int
  createdAt DateTime @default(now())
}

model CardanoSignalThreeMonth {
  id        Int      @id @default(autoincrement())
  ticker    String
  orderType String
  price     Float
  interval  Int
  createdAt DateTime @default(now())
}

model CardanoSignalSixMonth {
  id        Int      @id @default(autoincrement())
  ticker    String
  orderType String
  price     Float
  interval  Int
  createdAt DateTime @default(now())
}

model CardanoSignalOneYear {
  id        Int      @id @default(autoincrement())
  ticker    String
  orderType String
  price     Float
  interval  Int
  createdAt DateTime @default(now())
}

// Banco de dados para resultados de operações da Cardano

model CardanoOperationResultOneMinute {
  id                Int      @id @default(autoincrement())
  ticker            String
  interval          Int
  previousOrderType String
  previousPrice     Float
  currentOrderType  String
  currentPrice      Float
  result            String   // 'win' ou 'loss'
  priceDifference   Float    // Diferença de preço
  createdAt         DateTime @default(now())
}

model CardanoOperationResultFiveMinute {
  id                Int      @id @default(autoincrement())
  ticker            String
  interval          Int
  previousOrderType String
  previousPrice     Float
  currentOrderType  String
  currentPrice      Float
  result            String
  priceDifference   Float
  createdAt         DateTime @default(now())
}

model CardanoOperationResultFifteenMinute {
  id                Int      @id @default(autoincrement())
  ticker            String
  interval          Int
  previousOrderType String
  previousPrice     Float
  currentOrderType  String
  currentPrice      Float
  result            String
  priceDifference   Float
  createdAt         DateTime @default(now())
}

model CardanoOperationResultFortyFiveMinute {
  id                Int      @id @default(autoincrement())
  ticker            String
  interval          Int
  previousOrderType String
  previousPrice     Float
  currentOrderType  String
  currentPrice      Float
  result            String
  priceDifference   Float
  createdAt         DateTime @default(now())
}

model CardanoOperationResultOneHour {
  id                Int      @id @default(autoincrement())
  ticker            String
  interval          Int
  previousOrderType String
  previousPrice     Float
  currentOrderType  String
  currentPrice      Float
  result            String
  priceDifference   Float
  createdAt         DateTime @default(now())
}

model CardanoOperationResultFourHours {
  id                Int      @id @default(autoincrement())
  ticker            String
  interval          Int
  previousOrderType String
  previousPrice     Float
  currentOrderType  String
  currentPrice      Float
  result            String
  priceDifference   Float
  createdAt         DateTime @default(now())
}

model CardanoOperationResultOneDay {
  id                Int      @id @default(autoincrement())
  ticker            String
  interval          Int
  previousOrderType String
  previousPrice     Float
  currentOrderType  String
  currentPrice      Float
  result            String
  priceDifference   Float
  createdAt         DateTime @default(now())
}

model CardanoOperationResultOneWeek {
  id                Int      @id @default(autoincrement())
  ticker            String
  interval          Int
  previousOrderType String
  previousPrice     Float
  currentOrderType  String
  currentPrice      Float
  result            String
  priceDifference   Float
  createdAt         DateTime @default(now())
}

model CardanoOperationResultOneMonth {
  id                Int      @id @default(autoincrement())
  ticker            String
  interval          Int
  previousOrderType String
  previousPrice     Float
  currentOrderType  String
  currentPrice      Float
  result            String
  priceDifference   Float
  createdAt         DateTime @default(now())
}

model CardanoOperationResultThreeMonth {
  id                Int      @id @default(autoincrement())
  ticker            String
  interval          Int
  previousOrderType String
  previousPrice     Float
  currentOrderType  String
  currentPrice      Float
  result            String
  priceDifference   Float
  createdAt         DateTime @default(now())
}

model CardanoOperationResultSixMonth {
  id                Int      @id @default(autoincrement())
  ticker            String
  interval          Int
  previousOrderType String
  previousPrice     Float
  currentOrderType  String
  currentPrice      Float
  result            String
  priceDifference   Float
  createdAt         DateTime @default(now())
}

model CardanoOperationResultOneYear {
  id                Int      @id @default(autoincrement())
  ticker            String
  interval          Int
  previousOrderType String
  previousPrice     Float
  currentOrderType  String
  currentPrice      Float
  result            String
  priceDifference   Float
  createdAt         DateTime @default(now())
}

